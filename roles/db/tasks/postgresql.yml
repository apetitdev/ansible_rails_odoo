---

- name: update postgresql authentication type
  sudo: yes
  template: src=pg_hba.conf.j2 dest=/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf owner=postgres group=postgres mode=0600
  notify: restart postgresql

- meta: flush_handlers # We need to run this handler so the auth methods are relaxed

- name: create postgres user
  postgresql_user: login_host=localhost name={{ user }} password={{ postgresql_password }} fail_on_user=yes state=present role_attr_flags=CREATEDB,SUPERUSER

- name: create database for production
  sudo: yes
  postgresql_db: name={{ application }} owner={{ user }} state=present login_host=localhost

- name: create hstore extension
  command: psql -U postgres -h localhost -c "create extension if not exists hstore;"

- name: Reintializes templates 1
  command: psql -U postgres -h localhost -c "UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1';"

- name: Reintializes templates 2
  command: psql -U postgres -h localhost -c "DROP DATABASE template1;"

- name: Reintializes templates 3
  command: psql -U postgres -h localhost -c "CREATE DATABASE template1 WITH TEMPLATE = template0 ENCODING = 'UTF-8';"

- name: Reintializes templates 4
  command: psql -U postgres -h localhost -c "UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template1';"

- name: update postgresql authentication type to safe settings
  sudo: yes
  template: src=pg_hba_safe.conf.j2 dest=/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf owner=postgres group=postgres mode=0600
  notify: restart postgresql

- name: update postgresql.conf to allow tcp connections
  sudo: yes
  lineinfile: dest=/etc/postgresql/{{ postgres_version }}/main/postgresql.conf regexp='^listen_addresses' line="listen_addresses = '*'" state=present
  notify: restart postgresql
