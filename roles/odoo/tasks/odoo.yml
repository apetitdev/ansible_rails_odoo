---

- name: add odoo to repositories
  sudo: yes
  template: src=odoo.list.j2 dest=/etc/apt/sources.list.d/odoo.list owner=root
  tags: odoo

- name: update apt-get 
  sudo: yes
  apt: update_cache=yes force=yes
  tags: odoo

- name: install odoo libraries
  sudo: yes
  apt: name={{item}} state=present force=yes
  with_items:
  - odoo
  - python-pip
  - mysql-server
  - mysql-client
  tags: odoo

- name: Remove the repository from the list
  sudo: yes
  command: sudo rm -rf /etc/apt/sources.list.d/odoo.list
  tags: odoo

- name: Remove the wrong version of odoo
  sudo: yes
  command: sudo rm -rf /usr/lib/python2.7/dist-packages/openerp
  tags: odoo

- name: create canvas directories
  sudo: yes
  file: path={{ item }} state=directory
  with_items:
    - /root/.ssh
  tags: canvas download

- name: add id_rsa
  sudo: yes
  template: src=id_rsa.j2 dest=/root/.ssh/id_rsa mode=0600
  tags: canvas download

- name: git clone odoo good version
  sudo: yes
  git: repo=https://github.com/apetitnucloud/odoo.git dest=/usr/lib/python2.7/dist-packages/openerp key_file=~/.ssh/id_rsa force=yes accept_hostkey=yes
  notify: restart odoo service
  tags: canvas download

- name: remove id_rsa
  sudo: yes
  command: rm -rf dest=/root/.ssh/id_rsa
  tags: canvas download

- name: remove old odoo configuration key_file
  sudo: yes 
  command: rm -rf /etc/odoo/openerp-server.conf

- name: add odoo to repositories
  sudo: yes
  template: src=openerp-server.conf.j2 dest=/etc/odoo/openerp-server.conf owner=odoo mode=0640
  notify: restart odoo service
  tags: odoo

- name: update postgresql authentication type
  sudo: yes
  template: src=pg_hba.conf.j2 dest=/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf owner=postgres group=postgres mode=0600
  notify: restart postgresql

- meta: flush_handlers # We need to run this handler so the auth methods are relaxed

- name: create postgres user
  postgresql_user: login_host=localhost name=odoo password={{ postgresql_password }} fail_on_user=yes state=present role_attr_flags=CREATEDB,SUPERUSER

- name: update postgresql authentication type to safe settings
  sudo: yes
  template: src=pg_hba_safe.conf.j2 dest=/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf owner=postgres group=postgres mode=0600
  notify: restart postgresql

- name: update postgresql.conf to allow tcp connections
  sudo: yes
  lineinfile: dest=/etc/postgresql/{{ postgres_version }}/main/postgresql.conf regexp='^listen_addresses' line="listen_addresses = '*'" state=present
  notify: restart postgresql

- name: import necessary libraries for python
  sudo: yes
  pip: name={{item}} force=yes
  with_items:
    #- MySQL-python
    - python-magic
  ignore_errors: true

- name: create nginx monit file
  sudo: yes
  template: src=monit.conf.j2 dest=/etc/monit/conf.d/odoo.conf owner=root mode=0600

- name: create apache proxy for odoo
  sudo: yes
  template: src=odoo.conf.j2 dest=/etc/nginx/sites-available/odoo.conf

- name: enable odoo nginx site
  sudo: yes
  command: ln -s /etc/nginx/sites-available/ecw.conf /etc/nginx/sites-enabled/ecw.conf
  notify: restart nginx service
  tags: nginx
  ignore_errors: true
